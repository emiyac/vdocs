import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.eabe3503.js";const p="/vdocs/others/001/001.png",e="/vdocs/others/001/002.png",o="/vdocs/others/001/003.png",t="/vdocs/others/001/004.png",h=JSON.parse('{"title":"使用github actions自动部署项目","description":"","frontmatter":{"title":"使用github actions自动部署项目","createTime":"2024-05-10T21:01:10.000Z","updateTime":"2024-05-10T21:32:10.000Z","isPublished":true,"tags":["git"]},"headers":[],"relativePath":"others/001_github_actions_pages_tutorial.md","filePath":"others/001_github_actions_pages_tutorial.md"}'),c={name:"others/001_github_actions_pages_tutorial.md"},r=l('<h2 id="使用github-actions自动部署项目" tabindex="-1">使用github actions自动部署项目 <a class="header-anchor" href="#使用github-actions自动部署项目" aria-label="Permalink to &quot;使用github actions自动部署项目&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本实例使用 Github Actions 自动部署 Vitepress 项目，并使用 Pages 服务展示项目。需要创建两个仓库：repo-src 和 repo-dist，其中 repo-src 用于存放源文件并使用 Github Actions 功能构建项目，将构建好的静态文件推送至 repo-dist 仓库，repo-dist 仓库需要设置 Github Pages。</p></div><h3 id="创建personal-access-tokens-和-actions-secrets" tabindex="-1">创建Personal access tokens 和 Actions secrets <a class="header-anchor" href="#创建personal-access-tokens-和-actions-secrets" aria-label="Permalink to &quot;创建Personal access tokens 和 Actions secrets&quot;">​</a></h3><p>⚡step01 点击头像 -&gt; Settings -&gt; Developer settings</p><p><img src="'+p+'" alt="banner other"></p><p>⚡step02 点击 Personal access tokens -&gt; Tokens (classic) -&gt; Generate new token (classic)</p><p><img src="'+e+'" alt="banner other"></p><p>⚡step02 填入描述信息、过期时间、选择权限，生成token</p><p><img src="'+o+'" alt="banner other"></p><p>⚡step04 创建 repo-src 仓库的 Actions secrets</p><p><img src="'+t+`" alt="banner other"></p><h3 id="github-actions-配置" tabindex="-1">Github Actions 配置 <a class="header-anchor" href="#github-actions-配置" aria-label="Permalink to &quot;Github Actions 配置&quot;">​</a></h3><p>在 repo-src 项目的根目录中创建一个 <code>.github/workflows/deploy.yaml</code> 文件，内容如下：</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Deploy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 自动执行任务</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 当有代码推送到指定分支时会自动触发任务</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">main</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">workflow_dispatch</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 手动触发构建任务</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">main</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">NODE_VERSION</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">20.13.1</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ubuntu-latest</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 指定使用的操作系统</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">actions/checkout@v4</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 选择公共仓库中或发布actions用于特定的操作，这里用于切换仓库分支和使用node编译</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">actions/setup-node@v4</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">node-version</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">\${{ env.NODE_VERSION }}</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 指定node版本</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Install Dependencies</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 安装依赖和静态文件打包</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">|</span></span>
<span class="line"><span style="color:#C3E88D;">          npm install</span></span>
<span class="line"><span style="color:#C3E88D;">          npm run build</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Push To Pages</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 将打包好的静态文件推送到指定的仓库，secrets.SECRET_VDOCS 是Github Action提供的环境变量</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">working-directory</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">./dist</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 指定下面指令运行的目录</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">|</span></span>
<span class="line"><span style="color:#C3E88D;">          pwd</span></span>
<span class="line"><span style="color:#C3E88D;">          ls -lh</span></span>
<span class="line"><span style="color:#C3E88D;">          git init</span></span>
<span class="line"><span style="color:#C3E88D;">          git config --global user.email &quot;xxx&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">          git config --global user.name &quot;xxx&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">          git checkout -b main</span></span>
<span class="line"><span style="color:#C3E88D;">          git add -A</span></span>
<span class="line"><span style="color:#C3E88D;">          git commit -m &#39;docs: update docs&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">          git remote add origin https://\${{ secrets.SECRET_VDOCS }}@github.com/xxx/repo-dist.git</span></span>
<span class="line"><span style="color:#C3E88D;">          git push origin main -f -q</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>将项目推送到 repo-src 仓库后会自动触发构建任务</p><h3 id="开启-github-pages" tabindex="-1">开启 Github Pages <a class="header-anchor" href="#开启-github-pages" aria-label="Permalink to &quot;开启 Github Pages&quot;">​</a></h3><p>⚡repo-dist 需要开启 Github Pages 功能，并且配置分支和目录</p>`,17),i=[r];function y(D,b,u,B,E,m){return n(),a("div",null,i)}const d=s(c,[["render",y]]);export{h as __pageData,d as default};
